name: CI build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:

  AWS_REGION : "us-east-1"
  TARGET_INSTANCE_TAG_NAME: "APIName"
  TARGET_INSTANCE_TAG_VALUE: "habit"
  AWS_ROLE_TO_ASSUME: "arn:aws:iam::227370404427:role/GitHubActionsDeployRole"
  AWS_ACCOUNT_ID: "227370404427"


# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'   # or zulu, correttoâ€¦
          java-version: '21'
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # this logs Docker into the ECR registry with the creds
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: docker/setup-buildx-action@v3

      - name: Compile & build the container image, then push to ECR
        run: |
          ./mvnw package \
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.name=content-api \
            -Dquarkus.docker.buildx.platform=linux/amd64,linux/arm64 \
            -Dquarkus.container-image.registry=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com \
            -Dquarkus.container-image.group=habit \
            -Dquarkus.container-image.tag=latest
  redeploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Tell the instance to pull the new image
        run: |
          aws ssm send-command \
            --instance-ids "${{ env.TARGET_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Redeploy Quarkus" \
            --parameters commands="docker compose -f /opt/quarkus/docker-compose.yml pull app && \
                                    docker compose -f /opt/quarkus/docker-compose.yml up -d --no-deps app"